1	首先  创建一个目录 
	mkdir learn_git
	cd learngit

2	通过git_init把这个目录变成git可以管理的仓库
	git init

3	git add    添加到仓库
	git commit 提交到仓库

4	git status 查看仓库的当前状态

5	git diff 查看different

6	git log  查看最近到最远的提交日志
	git reflog  列表显示   
	--pretty=one	line 显示commit id(版本号)

7	git reset --hard HEAD^ 回退到上一版
	HEAD	  表示当前版本
	HEAD^     表示上一版本
	HEAD^^    表示上上版本
	HEAD~100  表示往上100个版本

8	工作区和暂存区
	工作区			|    版本库
	readme.txt      |	stage(暂存)	     master (HEAD指针指向master)
	    git add->加到暂存     git commit->提交到分支

9	第一次修改-> git add-> 第二次修改 -> git commit
	第一次修改放入暂存区提交，第二次不会
	可以：第一次修改-> git add -> 第二次修改 -> git add-> git commit 

10	撤销修改
	1.在工作区 改乱了文件内容 直接丢弃
		git checkout -- file(文件名) --必须有
	2.添加到暂存区
		git reset HEAD file 回到1了
	3.commit了，使用 版本回退 前提没有推送到远程库

11	删除文件
	直接 rm .../ git rm ..
	出现误删 git checkout -- file(test.txt)

12	添加远程库
	首先上GitHub注册
	创建SSH Key   ssh-keygen -t rsa -C "gaowei121314@gmail.com"(注册的邮箱地址)
	之后有 id_rsa(私钥，不能泄露)，id_rsa.pub(公钥，可以告诉别人)
	登入GitHub，打开"Account settings","SSH Keys"页面，点击"Add SSH Key"，填上任意title
	在key文本框里黏贴id_rsa.pub文件的内容
	再到右上角找到"Create a new repo",创建一个新仓库
	
	$username --> 用户帐号
	$reponame --> 仓库名称
	然后在新开一个网页网址输入 https://github.com/$username/$reponame.git 登入到你的仓库
	git remote add origin git@github.com:$username/$reponame.git  使本地库与之关联     
	
	git push -u origin master 把本地库的所有内容推送到远程库上
	之后只要本地作了提交，就可以通过 git push origin master把本地
	master分支的最新修改推送到GitHub。

13	从远程库克隆
	首先登入GitHub，创建一个新的库 勾选Initialize this repository with a README,
	这样创建后会有一个README.md
	下步 git clone git@github.com:$username/$reponame.git
	(注意最好在外面新建一个文件夹) 然后你会看到目录下有个readme.md
	(默认使用SSH git:// 也可以使用https)

14	创建与合并分支
	每次提交  git会把它们串成一条时间线即分支。
	HEAD --> master --> 提交

	git checkout -b dev 创建dev分支并切换到dev
	相当于 git branch dev	创建dev分支
		   git checkout dev 切换dev分支

	git branch			查看当前分支（该命令会列出所有分支，当前分支前面会有个*）
	git merge dev		把dev分支合并到master分支上
	git branch -d dev   把当前dev分支删除



	it is  a test ....
